//
// Mixins
// --------------------------------------------------

//== Media Queries
@mixin mq($size, $width: max) {
  $result: 0;
  @if(type-of($size) == number) { 
    $result: $size;
  } @else {
    @each $key, $value in $screen {
      @if($key == $size) {
        $result: $value;
      }
    }
  }
  @if($width == min) {
    $result: $result - 1;
  }
  @media (#{$width}-width: #{$result}) {
    @content;
  }
}


//== Media Queries: Only
@mixin mq-only($options...) {

  $len: length($options);

  $screen-min: 0;
  $screen-max: 0;
  $screen-base: nth($options, 1);
  $screen-range: 0;

  @if($len == 2) {
    $screen-range: nth($options, 2);
  }

  $stock: 0;
  @each $key, $value in $screen {
    @if($key == $screen-base) {
      $screen-max: $value;
      @if($stock > 1) {
        $screen-min: $stock; 
      }
    }
    @if($key == $screen-range) {
      $screen-min: $screen-max;
      $screen-max: $value;
    }

    $stock: $value;
  }

  @if(type-of($screen-range) == number) {
    @if($screen-range > 1) {
      $screen-min: $screen-max;
      $screen-max: $screen-range;
    }
  }
  @if(type-of($screen-base) == number) {
    $screen-min: $screen-base;
  }

  @if($screen-min == 0) {
    @media (max-width: #{$screen-max}) {
      @content;
    }
  } @else {
    @media (min-width: #{$screen-min}) and (max-width: #{$screen-max}) {
      @content;
    }
  }
}


//== Background
@mixin bgsz($options...) {
  $url: nth($options, 1);
  $ratio: nth($options, 2);

  @if($postcss-assets) {

    @if(nth($options, 2) > 1) {
      width: width(#{$url}, #{$ratio});
      height: height(#{$url}, #{$ratio});
      background-image: url(#{$url});
      background-size: size(#{$url}, #{$ratio});      
    } @else {
      width: width(#{$url});
      height: height(#{$url});
      background-image: url(#{$url});
      background-size: size(#{$url});
    }
    @content;

  } @else {
    
    $width: nth($options, 3) / $ratio;
    $height: nth($options, 4) / $ratio;

    width: $width;
    height: $height;
    background-image: url(#{$url});
    background-size: $width $height;
    @content;

  }
}


//== Position
@mixin position($options...) {

  $len: length($options);

  @if(type-of(nth($options, 1)) == string) {
    position: nth($options, 1);
    top: nth($options, 2);
    right: nth($options, 2);
    bottom: nth($options, 2);
    left: nth($options, 2);
  } @else {
    position: absolute;
    top: nth($options, 1);
    right: nth($options, 1);
    bottom: nth($options, 1);
    left: nth($options, 1);
  }
}


//== Responsive YouTube
@mixin youtube($width, $height) {
  position: relative;
  overflow: hidden;
  padding-top: percentage($height / $width);
  @content;
  iframe {
    position: absolute;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
  }
}


//== Placeholder
@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &:-moz-placeholder {
    opacity: 1;
    @content;
  }
  &::-moz-placeholder {
    opacity: 1;
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &:placeholder-shown {
    @content;
  }
}